name: Build & Deploy Backend (GHCR + Webhook)

on:
  push:
    branches: [ main ]
  workflow_dispatch:

env:
  IMAGE_NAME: ixora-backend
  REGISTRY: ghcr.io
  OWNER: ${{ github.repository_owner }}

jobs:
  build-and-push:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3

      - name: Set up Buildx
        uses: docker/setup-buildx-action@v3

      - name: Log in to GHCR
        uses: docker/login-action@v3
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Extract metadata (tags, labels)
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: ${{ env.REGISTRY }}/${{ env.OWNER }}/${{ env.IMAGE_NAME }}
          tags: |
            type=raw,value=prod
            type=sha,format=short
          labels: |
            org.opencontainers.image.source=${{ github.repository }}

      - name: Build and push
        uses: docker/build-push-action@v6
        with:
          context: .
          file: ./Dockerfile
          push: true
          platforms: linux/amd64
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}

  trigger-webhook:
    runs-on: ubuntu-latest
    needs: build-and-push
    steps:
      - name: Trigger aaPanel webhook
        env:
          WEBHOOK_URL: ${{ secrets.AAPANEL_WEBHOOK_URL }}
          WEBHOOK_TOKEN: ${{ secrets.AAPANEL_WEBHOOK_TOKEN }}
        run: |
          if [ -z "${WEBHOOK_URL}" ]; then
            echo "AAPANEL_WEBHOOK_URL not set"; exit 1;
          fi
          if [ -n "${WEBHOOK_TOKEN}" ]; then
            curl -fsSL -X POST "${WEBHOOK_URL}?token=${WEBHOOK_TOKEN}"
          else
            curl -fsSL -X POST "${WEBHOOK_URL}"
          fi
